name: Release Hello World

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64]
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/hello-${{ matrix.goos }}-${{ matrix.goarch }}$EXT main.go

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/hello-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display downloaded files
        run: ls -R ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: |
            自动构建发布版本 ${{ github.ref_name }}
            支持平台：
            - Windows (amd64)
            - Linux (amd64)
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
